name: Deploy Golang App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-southeast-1
  EC2_HOST: ${{ secrets.EC2_HOST }}
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: |
          cd app
          go mod download

      - name: Run tests
        run: |
          cd app
          go test -v ./...

  build-and-deploy:
    name: Build and Deploy
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build
        run: |
          cd app
          GOOS=linux GOARCH=amd64 go build -o app

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace

      - name: Deploy to EC2
        run: |
          # Create deployment script
          cat > deploy.sh << 'EOF'
          #!/bin/bash
          # Create app directory with proper permissions
          sudo mkdir -p /app
          sudo chown ec2-user:ec2-user /app
          
          cd /app
          # Stop existing process if running
          pkill app || true
          # Copy new binary
          mv app.new app
          # Start application
          nohup ./app &
          EOF

          # Copy binary and deployment script
          scp -o StrictHostKeyChecking=no app/app ec2-user@${{ secrets.EC2_HOST }}:/app/app.new
          scp -o StrictHostKeyChecking=no deploy.sh ec2-user@${{ secrets.EC2_HOST }}:/app/deploy.sh
          
          # Execute deployment script
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} "chmod +x /app/deploy.sh && /app/deploy.sh" 